server {
    listen 8081;
    
    location / {
        proxy_pass http://remark42:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cookie preservation for authentication
        proxy_cookie_domain remark42 $host;
        proxy_cookie_path / /;
        
        # Remove all CSP and frame options headers
        proxy_hide_header Content-Security-Policy;
        proxy_hide_header X-Frame-Options;
        proxy_hide_header Frame-Options;
        
        # Add permissive headers
        add_header X-Frame-Options "ALLOWALL" always;
        add_header Content-Security-Policy "" always;
        add_header Access-Control-Allow-Credentials "true" always;
        
        # CORS headers
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, ngrok-skip-browser-warning" always;
        
        # Handle preflight OPTIONS requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, ngrok-skip-browser-warning";
            add_header Access-Control-Max-Age "1728000";
            add_header Content-Type "text/plain; charset=utf-8";
            add_header Content-Length "0";
            return 204;
        }
    }
}